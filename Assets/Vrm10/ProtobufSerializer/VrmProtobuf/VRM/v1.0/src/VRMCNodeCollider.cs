// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: VRMC_node_collider.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VrmProtobuf {

  /// <summary>Holder for reflection information generated from VRMC_node_collider.proto</summary>
  public static partial class VRMCNodeColliderReflection {

    #region Descriptor
    /// <summary>File descriptor for VRMC_node_collider.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VRMCNodeColliderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhWUk1DX25vZGVfY29sbGlkZXIucHJvdG8SC1ZybVByb3RvYnVmGh5nb29n",
            "bGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8iRQoGU3BoZXJlEg4KBm9mZnNl",
            "dBgBIAMoAhIrCgZyYWRpdXMYAiABKAsyGy5nb29nbGUucHJvdG9idWYuRmxv",
            "YXRWYWx1ZSJUCgdDYXBzdWxlEg4KBm9mZnNldBgBIAMoAhIrCgZyYWRpdXMY",
            "AiABKAsyGy5nb29nbGUucHJvdG9idWYuRmxvYXRWYWx1ZRIMCgR0YWlsGAMg",
            "AygCIlsKDUNvbGxpZGVyU2hhcGUSIwoGc3BoZXJlGAEgASgLMhMuVnJtUHJv",
            "dG9idWYuU3BoZXJlEiUKB2NhcHN1bGUYAiABKAsyFC5Wcm1Qcm90b2J1Zi5D",
            "YXBzdWxlIkAKElZSTUNfbm9kZV9jb2xsaWRlchIqCgZzaGFwZXMYASADKAsy",
            "Gi5Wcm1Qcm90b2J1Zi5Db2xsaWRlclNoYXBlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VrmProtobuf.Sphere), global::VrmProtobuf.Sphere.Parser, new[]{ "Offset", "Radius" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrmProtobuf.Capsule), global::VrmProtobuf.Capsule.Parser, new[]{ "Offset", "Radius", "Tail" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrmProtobuf.ColliderShape), global::VrmProtobuf.ColliderShape.Parser, new[]{ "Sphere", "Capsule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrmProtobuf.VRMC_node_collider), global::VrmProtobuf.VRMC_node_collider.Parser, new[]{ "Shapes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Sphere : pb::IMessage<Sphere> {
    private static readonly pb::MessageParser<Sphere> _parser = new pb::MessageParser<Sphere>(() => new Sphere());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Sphere> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrmProtobuf.VRMCNodeColliderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sphere() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sphere(Sphere other) : this() {
      offset_ = other.offset_.Clone();
      Radius = other.Radius;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sphere Clone() {
      return new Sphere(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_offset_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> offset_ = new pbc::RepeatedField<float>();
    /// <summary>
    /// The sphere center. vector3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Offset {
      get { return offset_; }
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 2;
    private static readonly pb::FieldCodec<float?> _single_radius_codec = pb::FieldCodec.ForStructWrapper<float>(18);
    private float? radius_;
    /// <summary>
    /// The sphere radius
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Radius {
      get { return radius_; }
      set {
        radius_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Sphere);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Sphere other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!offset_.Equals(other.offset_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= offset_.GetHashCode();
      if (radius_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Radius);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      offset_.WriteTo(output, _repeated_offset_codec);
      if (radius_ != null) {
        _single_radius_codec.WriteTagAndValue(output, Radius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += offset_.CalculateSize(_repeated_offset_codec);
      if (radius_ != null) {
        size += _single_radius_codec.CalculateSizeWithTag(Radius);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Sphere other) {
      if (other == null) {
        return;
      }
      offset_.Add(other.offset_);
      if (other.radius_ != null) {
        if (radius_ == null || other.Radius != 0F) {
          Radius = other.Radius;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            offset_.AddEntriesFrom(input, _repeated_offset_codec);
            break;
          }
          case 18: {
            float? value = _single_radius_codec.Read(input);
            if (radius_ == null || value != 0F) {
              Radius = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class Capsule : pb::IMessage<Capsule> {
    private static readonly pb::MessageParser<Capsule> _parser = new pb::MessageParser<Capsule>(() => new Capsule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Capsule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrmProtobuf.VRMCNodeColliderReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Capsule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Capsule(Capsule other) : this() {
      offset_ = other.offset_.Clone();
      Radius = other.Radius;
      tail_ = other.tail_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Capsule Clone() {
      return new Capsule(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_offset_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> offset_ = new pbc::RepeatedField<float>();
    /// <summary>
    /// The sphere center. vector3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Offset {
      get { return offset_; }
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 2;
    private static readonly pb::FieldCodec<float?> _single_radius_codec = pb::FieldCodec.ForStructWrapper<float>(18);
    private float? radius_;
    /// <summary>
    /// The sphere radius
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Radius {
      get { return radius_; }
      set {
        radius_ = value;
      }
    }


    /// <summary>Field number for the "tail" field.</summary>
    public const int TailFieldNumber = 3;
    private static readonly pb::FieldCodec<float> _repeated_tail_codec
        = pb::FieldCodec.ForFloat(26);
    private readonly pbc::RepeatedField<float> tail_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Tail {
      get { return tail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Capsule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Capsule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!offset_.Equals(other.offset_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      if(!tail_.Equals(other.tail_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= offset_.GetHashCode();
      if (radius_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Radius);
      hash ^= tail_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      offset_.WriteTo(output, _repeated_offset_codec);
      if (radius_ != null) {
        _single_radius_codec.WriteTagAndValue(output, Radius);
      }
      tail_.WriteTo(output, _repeated_tail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += offset_.CalculateSize(_repeated_offset_codec);
      if (radius_ != null) {
        size += _single_radius_codec.CalculateSizeWithTag(Radius);
      }
      size += tail_.CalculateSize(_repeated_tail_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Capsule other) {
      if (other == null) {
        return;
      }
      offset_.Add(other.offset_);
      if (other.radius_ != null) {
        if (radius_ == null || other.Radius != 0F) {
          Radius = other.Radius;
        }
      }
      tail_.Add(other.tail_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            offset_.AddEntriesFrom(input, _repeated_offset_codec);
            break;
          }
          case 18: {
            float? value = _single_radius_codec.Read(input);
            if (radius_ == null || value != 0F) {
              Radius = value;
            }
            break;
          }
          case 26:
          case 29: {
            tail_.AddEntriesFrom(input, _repeated_tail_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ColliderShape : pb::IMessage<ColliderShape> {
    private static readonly pb::MessageParser<ColliderShape> _parser = new pb::MessageParser<ColliderShape>(() => new ColliderShape());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColliderShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrmProtobuf.VRMCNodeColliderReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColliderShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColliderShape(ColliderShape other) : this() {
      sphere_ = other.sphere_ != null ? other.sphere_.Clone() : null;
      capsule_ = other.capsule_ != null ? other.capsule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColliderShape Clone() {
      return new ColliderShape(this);
    }

    /// <summary>Field number for the "sphere" field.</summary>
    public const int SphereFieldNumber = 1;
    private global::VrmProtobuf.Sphere sphere_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrmProtobuf.Sphere Sphere {
      get { return sphere_; }
      set {
        sphere_ = value;
      }
    }

    /// <summary>Field number for the "capsule" field.</summary>
    public const int CapsuleFieldNumber = 2;
    private global::VrmProtobuf.Capsule capsule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrmProtobuf.Capsule Capsule {
      get { return capsule_; }
      set {
        capsule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColliderShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColliderShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Sphere, other.Sphere)) return false;
      if (!object.Equals(Capsule, other.Capsule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sphere_ != null) hash ^= Sphere.GetHashCode();
      if (capsule_ != null) hash ^= Capsule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sphere_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Sphere);
      }
      if (capsule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Capsule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sphere_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sphere);
      }
      if (capsule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Capsule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColliderShape other) {
      if (other == null) {
        return;
      }
      if (other.sphere_ != null) {
        if (sphere_ == null) {
          Sphere = new global::VrmProtobuf.Sphere();
        }
        Sphere.MergeFrom(other.Sphere);
      }
      if (other.capsule_ != null) {
        if (capsule_ == null) {
          Capsule = new global::VrmProtobuf.Capsule();
        }
        Capsule.MergeFrom(other.Capsule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sphere_ == null) {
              Sphere = new global::VrmProtobuf.Sphere();
            }
            input.ReadMessage(Sphere);
            break;
          }
          case 18: {
            if (capsule_ == null) {
              Capsule = new global::VrmProtobuf.Capsule();
            }
            input.ReadMessage(Capsule);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VRMC_node_collider : pb::IMessage<VRMC_node_collider> {
    private static readonly pb::MessageParser<VRMC_node_collider> _parser = new pb::MessageParser<VRMC_node_collider>(() => new VRMC_node_collider());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VRMC_node_collider> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrmProtobuf.VRMCNodeColliderReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VRMC_node_collider() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VRMC_node_collider(VRMC_node_collider other) : this() {
      shapes_ = other.shapes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VRMC_node_collider Clone() {
      return new VRMC_node_collider(this);
    }

    /// <summary>Field number for the "shapes" field.</summary>
    public const int ShapesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::VrmProtobuf.ColliderShape> _repeated_shapes_codec
        = pb::FieldCodec.ForMessage(10, global::VrmProtobuf.ColliderShape.Parser);
    private readonly pbc::RepeatedField<global::VrmProtobuf.ColliderShape> shapes_ = new pbc::RepeatedField<global::VrmProtobuf.ColliderShape>();
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::VrmProtobuf.ColliderShape> Shapes {
      get { return shapes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VRMC_node_collider);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VRMC_node_collider other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!shapes_.Equals(other.shapes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= shapes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      shapes_.WriteTo(output, _repeated_shapes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += shapes_.CalculateSize(_repeated_shapes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VRMC_node_collider other) {
      if (other == null) {
        return;
      }
      shapes_.Add(other.shapes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shapes_.AddEntriesFrom(input, _repeated_shapes_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
