using System;
using ObjectNotation;

namespace GltfFormat
{
    [Serializable]
    public class GltfAsset: IEquatable<GltfAsset>
    {
        public string generator;

        [JsonSchema(Required = true, Pattern = "^[0-9]+\\.[0-9]+$")]
        public string version;

        public string copyright;

        [JsonSchema(Pattern = "^[0-9]+\\.[0-9]+$")]
        public string minVersion;

        // empty schemas
        public object extensions;
        public object extras;

        public bool Equals(GltfAsset other)
        {
            if(generator!=other.generator)return false;
            if(version!=other.version)return false;
            return true;
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if (obj is GltfAsset asset)
            {
                return Equals(asset);
            }
            return base.Equals(obj);
        }

        public override string ToString()
        {
            return string.Format("GLTF-{0} generated by {1}", version, generator);
        }
    }
}
